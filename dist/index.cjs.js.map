{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["export default (kvstore: KVNamespace, key: string) => kvstore.get<KvKeyDefinition>(key, 'json').then(mapKeys)\n\ndeclare type KvAlgorithm =\n    AlgorithmIdentifier\n    | RsaHashedImportParams\n    | EcKeyImportParams\n    | HmacImportParams\n    | DhImportKeyParams\n    | AesKeyAlgorithm\n\ninterface KvKey {\n    name: string,\n    format: \"raw\" | \"pkcs8\" | \"spki\",\n    key: string,\n    usage: string,\n    meta?: { [key: string]: any }\n}\n\ninterface KvKeyDefinition {\n    algorithm: KvAlgorithm,\n    encoding: BufferEncoding,\n    meta?: { [key: string]: any },\n    keys: KvKey[]\n}\n\nconst mapKeys = async (t: KvKeyDefinition | null) => {\n    if (!t) throw new Error('cannot load key from kvstore')\n    return Object.assign(\n        await buildKeys(t.keys, t.algorithm, t.encoding || 'base64', createKey),\n        typeof t.meta === 'object' ? t.meta : undefined\n    )\n}\n\nconst buildKeys = async (arr: KvKey[], algorithm: KvAlgorithm, encoding: BufferEncoding, cb: typeof createKey) => {\n    const entries = []\n    for (const key of arr) {\n        entries.push([\n            key.name,\n            Object.assign(\n                {\n                    key: await cb(algorithm, key, encoding),\n                    algorithm: algorithm\n                },\n                typeof key.meta === 'object' ? key.meta : undefined\n            )\n        ])\n    }\n    return Object.fromEntries(entries)\n}\n\nconst createKey = (algorithm: KvAlgorithm, key: KvKey, encoding: BufferEncoding) => crypto.subtle.importKey(\n    key.format,\n    Buffer.from(key.key, encoding),\n    algorithm,\n    false,\n    key.usage.split(',').map(s => s.trim() as KeyUsage)\n)\n\n"],"names":[],"mappings":";;AAAA,YAAe,CAAC,OAAoB,EAAE,GAAW,KAAK,OAAO,CAAC,GAAG,CAAkB,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAyB7G,MAAM,OAAO,GAAG,OAAO,CAAyB;IAC5C,IAAI,CAAC,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;IACvD,OAAO,MAAM,CAAC,MAAM,CAChB,MAAM,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,EAAE,SAAS,CAAC,EACvE,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,SAAS,CAClD,CAAA;AACL,CAAC,CAAA;AAED,MAAM,SAAS,GAAG,OAAO,GAAY,EAAE,SAAsB,EAAE,QAAwB,EAAE,EAAoB;IACzG,MAAM,OAAO,GAAG,EAAE,CAAA;IAClB,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACnB,OAAO,CAAC,IAAI,CAAC;YACT,GAAG,CAAC,IAAI;YACR,MAAM,CAAC,MAAM,CACT;gBACI,GAAG,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,QAAQ,CAAC;gBACvC,SAAS,EAAE,SAAS;aACvB,EACD,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS,CACtD;SACJ,CAAC,CAAA;KACL;IACD,OAAO,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;AACtC,CAAC,CAAA;AAED,MAAM,SAAS,GAAG,CAAC,SAAsB,EAAE,GAAU,EAAE,QAAwB,KAAK,MAAM,CAAC,MAAM,CAAC,SAAS,CACvG,GAAG,CAAC,MAAM,EACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,EAC9B,SAAS,EACT,KAAK,EACL,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAc,CAAC,CACtD;;;;"}